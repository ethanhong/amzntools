let targetActivity="",skipList=[],checkPeriod=5,delayAfterBRK=10;function smartLaborTrack(t,e,n,i){targetActivity=t,skipList=[targetActivity,...e],checkPeriod=n,delayAfterBRK=i,fetchUserHistoryPage().then((t=>getCurrentActivity(t))).then((t=>nextAction(t))).catch((()=>console.error("[Smart Labot Tracking] Fail!")))}function isNASite(){return"aftlite-na.amazon.com"===window.location.hostname}function getLogin(){return document.getElementsByTagName("span")[0].innerHTML.match(/\(([^)]+)\)/)[1]}function wait(t){return new Promise((e=>{setTimeout(e,t)}))}async function fetchUserHistoryPage(){console.log("func start: fetchUserHistoryPage");const t=getLogin(),e=await fetch(`/labor_tracking/lookup_history?user_name=${encodeURIComponent(t)}`),n=await e.text();return(new DOMParser).parseFromString(n,"text/html")}function getCurrentActivity(t){console.log("func start: getLatestAction");const e=isNASite()?".reportLayout > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(2)":"table.a-bordered > tbody > tr:nth-child(2) > td:nth-child(2) > p:nth-child(1)";return t.querySelector(e).textContent.trim()}async function nextAction(t){return skipList.includes(t)?(console.log(`latest action is ${t}. Wait 3 minust to check again.`),await wait(60*checkPeriod*1e3),checkin(""),!1):"BRK"===t?(console.log(`latest action is ${t}. Wait 10 minutes to checkin.`),await wait(60*delayAfterBRK*1e3),checkin(targetActivity),!1):(console.log(`latest action is ${t}. Checkin now.`),checkin(targetActivity),!1)}function checkin(t){const e=getLogin();console.log(`${e} is checked in to ${t}`),document.getElementsByName("name")[0].value=e,document.getElementsByName("code")[0].value=t,document.getElementsByTagName("form")[0].submit()}